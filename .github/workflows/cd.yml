name: Continuous Deployment

on:
  push:
    branches:
      - main
jobs:
  TerraformApply:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./provisioning/nonprod/dev
    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5
      - name: Terraform Init
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.KBY_NP_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.KBY_NP_AWS_SECRET }}
        run: terraform init -input=false
      - name: Terraform Apply
        env:
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.KBY_NP_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.KBY_NP_AWS_SECRET }}
        run: |
          terraform apply -auto-approve -input=false
  deploy:
    name: Build and deploy the service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.3'
        id: install
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: "${{ secrets.KBY_NP_AWS_ACCESS_KEY }}"
          aws-secret-access-key: "${{ secrets.KBY_NP_AWS_SECRET }}"
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: helloworld
          IMAGE_TAG: ${{ github.sha }}
          DB_USERNAME: username
          DB_PASSWORD: password
        run: |
          aws ecr describe-repositories --repository-names ${ECR_REPOSITORY} || aws ecr create-repository --repository-name ${ECR_REPOSITORY}
          mvn package
          docker build -t helloworld .
          docker tag helloworld:latest 132139027691.dkr.ecr.us-east-1.amazonaws.com/helloworld:${IMAGE_TAG}
          docker push 132139027691.dkr.ecr.us-east-1.amazonaws.com/helloworld:${IMAGE_TAG}
      - name: Update kube config
        run: |
          aws eks update-kubeconfig --name hello-world-dev --region us-east-1
          export KUBECONFIG=.kubeconfig:$HOME/.kube/config
      - name: Deploy to cluster
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          helm upgrade helloworld-release --install helm/helloworld --set image.name=132139027691.dkr.ecr.us-east-1.amazonaws.com/helloworld:${IMAGE_TAG}
